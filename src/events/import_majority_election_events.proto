// (c) Copyright by Abraxas Informatik AG
// For license information see LICENSE file

syntax = "proto3";

package abraxas.voting.ausmittlung.events.v1;

import "data/event_info.proto";
import "data/import_majority_election_event_data.proto";
import "data/import_counting_circle_result_count_of_voters_information_event_data.proto";
import "shared/import.proto";  

message MajorityElectionResultImported {
  data.EventInfo event_info = 1;
  string import_id = 2;
  string contest_id = 3;
  string majority_election_id = 4;
  string counting_circle_id = 5;
  shared.v1.ResultImportType import_type = 6;

  /* Aggregated candidate results. Note that these are not final, they may change after the write-ins are mapped */
  repeated data.MajorityElectionCandidateResultImportEventData candidate_results = 7;

  /* Aggregated write-in data which needs to be mapped to existing candidates */
  repeated data.MajorityElectionWriteInEventData write_ins = 8;
  int32 empty_vote_count = 9;
  int32 invalid_vote_count = 10;
  int32 total_candidate_vote_count_excl_individual = 11;
  int32 count_of_voters = 12;

  /* Ballots which are blank, meaning no candidates specified */
  int32 blank_ballot_count = 13;

  data.CountingCircleResultCountOfVotersInformationImportEventData count_of_voters_information = 14;
}

message SecondaryMajorityElectionResultImported {
  data.EventInfo event_info = 1;
  string import_id = 2;
  string contest_id = 3;
  string secondary_majority_election_id = 4;
  string counting_circle_id = 5;
  shared.v1.ResultImportType import_type = 6;

  /* Aggregated candidate results. Note that these are not final, they may change after the write-ins are mapped */
  repeated data.MajorityElectionCandidateResultImportEventData candidate_results = 7;

  /* Aggregated write-in data which needs to be mapped to existing candidates */
  repeated data.MajorityElectionWriteInEventData write_ins = 8;
  int32 empty_vote_count = 9;
  int32 invalid_vote_count = 10;
  int32 total_candidate_vote_count_excl_individual = 11;
  int32 count_of_voters = 12;
}

/* Ballot which contains one or more write-ins. These ballots need to be tracked expicitely, since invalid write-ins may invalidate the whole ballot */
message MajorityElectionWriteInBallotImported {
  data.EventInfo event_info = 1;
  string import_id = 2;
  string contest_id = 3;
  string majority_election_id = 4;
  string counting_circle_id = 5;
  shared.v1.ResultImportType import_type = 6;
  repeated string candidate_ids = 7;
  repeated string write_in_mapping_ids = 8;
  int32 empty_vote_count = 9;
  int32 invalid_vote_count = 10;
}

/* Ballot which contains one or more write-ins. These ballots need to be tracked expicitely, since invalid write-ins may invalidate the whole ballot */
message SecondaryMajorityElectionWriteInBallotImported {
  data.EventInfo event_info = 1;
  string import_id = 2;
  string contest_id = 3;
  string secondary_majority_election_id = 4;
  string counting_circle_id = 5;
  shared.v1.ResultImportType import_type = 6;
  repeated string candidate_ids = 7;
  repeated string write_in_mapping_ids = 8;
  int32 empty_vote_count = 9;
  int32 invalid_vote_count = 10;
}

message MajorityElectionWriteInsMapped {
  data.EventInfo event_info = 1;
  string counting_circle_id = 2;
  string majority_election_id = 3;
  string import_id = 4;
  shared.v1.ResultImportType import_type = 5;
  repeated data.MajorityElectionWriteInMappedEventData write_in_mappings = 6;
}

message SecondaryMajorityElectionWriteInsMapped {
  data.EventInfo event_info = 1;
  string counting_circle_id = 2;
  string secondary_majority_election_id = 3;
  string import_id = 4;
  shared.v1.ResultImportType import_type = 5;
  repeated data.MajorityElectionWriteInMappedEventData write_in_mappings = 6;
}

message MajorityElectionWriteInsReset {
  data.EventInfo event_info = 1;
  string counting_circle_id = 2;
  string majority_election_id = 3;
  string import_id = 4;
  shared.v1.ResultImportType import_type = 5;
}

message SecondaryMajorityElectionWriteInsReset {
  data.EventInfo event_info = 1;
  string counting_circle_id = 2;
  string secondary_majority_election_id = 3;
  string import_id = 4;
  shared.v1.ResultImportType import_type = 5;
}
