// (c) Copyright 2022 by Abraxas Informatik AG
// For license information see LICENSE file

syntax = "proto3";

package abraxas.voting.ausmittlung.services.v1;

import "google/protobuf/empty.proto";
import "models/second_factor_transaction.proto";
import "models/majority_election_end_result.proto";
import "models/majority_election_result.proto";
import "models/validation.proto";
import "requests/majority_election_result_requests.proto";

service MajorityElectionResultService {
  rpc Get(requests.GetMajorityElectionResultRequest) returns (models.MajorityElectionResult);
  rpc GetBallotGroups(requests.GetMajorityElectionBallotGroupResultsRequest) returns (models.MajorityElectionBallotGroupResults);
  rpc DefineEntry(requests.DefineMajorityElectionResultEntryRequest) returns (google.protobuf.Empty);
  rpc EnterCountOfVoters(requests.EnterMajorityElectionCountOfVotersRequest) returns (google.protobuf.Empty);
  rpc EnterCandidateResults(requests.EnterMajorityElectionCandidateResultsRequest) returns (google.protobuf.Empty);
  rpc EnterBallotGroupResults(requests.EnterMajorityElectionBallotGroupResultsRequest) returns (google.protobuf.Empty);
  rpc PrepareSubmissionFinished(requests.MajorityElectionResultPrepareSubmissionFinishedRequest) returns (models.SecondFactorTransaction);
  rpc SubmissionFinished(requests.MajorityElectionResultSubmissionFinishedRequest) returns (google.protobuf.Empty);
  rpc PrepareCorrectionFinished(requests.MajorityElectionResultPrepareCorrectionFinishedRequest) returns (models.SecondFactorTransaction);
  rpc CorrectionFinished(requests.MajorityElectionResultCorrectionFinishedRequest) returns (google.protobuf.Empty);
  rpc FlagForCorrection(requests.MajorityElectionResultFlagForCorrectionRequest) returns (google.protobuf.Empty);
  rpc AuditedTentatively(requests.MajorityElectionResultAuditedTentativelyRequest) returns (google.protobuf.Empty);
  rpc ResetToSubmissionFinished(requests.MajorityElectionResultResetToSubmissionFinishedRequest) returns (google.protobuf.Empty);
  rpc Plausibilise(requests.MajorityElectionResultsPlausibiliseRequest) returns (google.protobuf.Empty);
  rpc ResetToAuditedTentatively(requests.MajorityElectionResultsResetToAuditedTentativelyRequest) returns (google.protobuf.Empty);
  rpc GetEndResult(requests.GetMajorityElectionEndResultRequest) returns (models.MajorityElectionEndResult);
  rpc GetEndResultAvailableLotDecisions(requests.GetMajorityElectionEndResultAvailableLotDecisionsRequest) returns (models.MajorityElectionEndResultAvailableLotDecisions);
  rpc UpdateEndResultLotDecisions(requests.UpdateMajorityElectionEndResultLotDecisionsRequest) returns (google.protobuf.Empty);
  rpc PrepareFinalizeEndResult(requests.PrepareFinalizeMajorityElectionEndResultRequest) returns (models.SecondFactorTransaction);
  rpc FinalizeEndResult(requests.FinalizeMajorityElectionEndResultRequest) returns (google.protobuf.Empty);
  rpc RevertEndResultFinalization(requests.RevertMajorityElectionEndResultFinalizationRequest) returns (google.protobuf.Empty);

  rpc ValidateEnterCountOfVoters(requests.ValidateEnterMajorityElectionCountOfVotersRequest) returns (models.ValidationSummary);
  rpc ValidateEnterCandidateResults(requests.ValidateEnterMajorityElectionCandidateResultsRequest) returns (models.ValidationSummary);
}
