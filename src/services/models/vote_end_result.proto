// (c) Copyright 2024 by Abraxas Informatik AG
// For license information see LICENSE file

syntax = "proto3";

package abraxas.voting.ausmittlung.services.v1.models;

import "models/contest.proto";
import "models/count_of_voters.proto";
import "models/vote.proto";
import "models/vote_result_sub_total.proto";
import "models/voting_cards.proto";

message VoteEndResult {
  Contest contest = 1;
  Vote vote = 2;

  /* Detailed information about the total count of voters who are able to vote ("Stimmberechtigte") */
  CountOfVotersInformation count_of_voters_information = 3;

  /* The received voting cards ("Stimmrechtsausweise") */
  repeated VotingCardResultDetail voting_cards = 4;

  repeated BallotEndResult ballot_end_results = 5;

  int32 count_of_done_counting_circles = 6;
  int32 total_count_of_counting_circles = 7;
  bool all_counting_circles_done = 8;
  bool finalized = 9;
}

message BallotEndResult {
  Ballot ballot = 1;
  PoliticalBusinessCountOfVoters count_of_voters = 2;
  repeated BallotQuestionEndResult question_end_results = 3;
  repeated TieBreakQuestionEndResult tie_break_question_end_results = 4;
}

message BallotQuestionEndResult {
  BallotQuestion question = 1;
  BallotQuestionResultSubTotal e_voting_sub_total = 2;
  BallotQuestionResultSubTotal conventional_sub_total = 3;
  int32 total_count_of_answer_yes = 4;
  int32 total_count_of_answer_no = 5;
  int32 total_count_of_answer_unspecified = 6;
  int32 count_of_counting_circle_yes = 7;
  int32 count_of_counting_circle_no = 8;
  bool has_counting_circle_majority = 9;
  bool has_counting_circle_unanimity = 10;
  bool accepted = 11;
}

message TieBreakQuestionEndResult {
  TieBreakQuestion question = 1;
  TieBreakQuestionResultSubTotal e_voting_sub_total = 2;
  TieBreakQuestionResultSubTotal conventional_sub_total = 3;
  int32 total_count_of_answer_q1 = 4;
  int32 total_count_of_answer_q2 = 5;
  int32 total_count_of_answer_unspecified = 6;
  int32 count_of_counting_circle_q1 = 7;
  int32 count_of_counting_circle_q2 = 8;
  bool has_counting_circle_q1_majority = 9;
  bool has_counting_circle_q2_majority = 10;
  bool q1_accepted = 11;
}
