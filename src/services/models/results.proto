// (c) Copyright by Abraxas Informatik AG
// For license information see LICENSE file

syntax = "proto3";

package abraxas.voting.ausmittlung.services.v1.models;

import "google/protobuf/timestamp.proto";
import "models/contest.proto";
import "models/contest_counting_circle_details.proto";
import "models/contest_counting_circle_electorate.proto";
import "models/counting_circle.proto";
import "models/count_of_voters.proto";
import "models/political_business.proto";
import "models/political_business_union.proto";
import "models/user.proto";
import "models/vote_result.proto";
import "shared/voter_type.proto";
import "models/voting_cards.proto";

message ResultOverview {
  Contest contest = 1;
  repeated SimplePoliticalBusiness political_businesses = 2;
  repeated ResultOverviewCountingCircleResults counting_circle_results = 3;
  bool current_tenant_is_contest_manager = 4;
  repeated PoliticalBusinessUnion political_business_unions = 5;
  bool has_partial_results = 6;
}

message ResultOverviewCountingCircleResults {
  ResultOverviewCountingCircleWithDetails counting_circle = 1;
  repeated ResultOverviewCountingCircleResult results = 2;
}

message ResultOverviewCountingCircleResult {
  string id = 1;
  string political_business_id = 2;
  string counting_circle_id = 3;
  CountingCircleResultState state = 4;
  google.protobuf.Timestamp submission_done_timestamp = 5;
  google.protobuf.Timestamp audited_tentatively_timestamp = 6;
  google.protobuf.Timestamp plausibilised_timestamp = 7;
  PoliticalBusinessNullableCountOfVoters count_of_voters = 8;
  bool published = 9;
  google.protobuf.Timestamp ready_for_correction_timestamp = 10;
  repeated BallotResult ballot_results = 11;
}

message ResultOverviewCountingCircleWithDetails {
  CountingCircle counting_circle = 1;
  ContestCountingCircleDetails details = 2;
}

message ResultList {
  Contest contest = 1;
  CountingCircle counting_circle = 2;
  ContestCountingCircleDetails details = 3;
  repeated ResultListResult results = 4;
  bool current_tenant_is_responsible = 5;
  CountingCircleResultState state = 6;
  repeated shared.v1.VoterType enabled_voter_types = 7;

  /*
    description: The contact person may be overwritten for a specific contest. Empty if the contact person is not overwritten.
  */
  string contest_counting_circle_contact_person_id = 8;
  bool must_update_contact_persons = 9;
  bool has_unmapped_e_voting_write_ins = 10;
  bool has_unmapped_e_counting_write_ins = 11;
  bool has_unmapped_write_ins = 12;
  repeated VotingCardChannel enabled_voting_card_channels = 13;
  ContestCountingCircleElectorateSummary electorate_summary = 14;
}

message ResultListResult {
  string id = 1;
  SimplePoliticalBusiness political_business = 2;
  CountingCircleResultState state = 3;
  google.protobuf.Timestamp submission_done_timestamp = 4;
  bool has_comments = 5;
  google.protobuf.Timestamp audited_tentatively_timestamp = 6;
  google.protobuf.Timestamp plausibilised_timestamp = 7;
  google.protobuf.Timestamp ready_for_correction_timestamp = 8;
}

message ResultImports {
  repeated ResultImport imports = 1;
}

message ResultImport {
  string contest_id = 1;
  User started_by = 2;
  google.protobuf.Timestamp started = 3;
  bool completed = 4;
  /*
    description: true if this import only deleted all previously imported data but did not import any new data
  */
  bool deleted = 5;
  string file_name = 6;

  // Counting circles that were imported.
  repeated CountingCircle imported_counting_circles = 7;

  // Counting circles that were not imported, but were included in the original import file.
  repeated ResultImportIgnoredCountingCircle ignored_counting_circles = 8;
}

// Describes counting circles that were ignored during a result import.
message ResultImportIgnoredCountingCircle {
  // The counting circle ID from the import file.
  string counting_circle_id = 1;

  // The counting circle description if it is a "test counting circle".
  string counting_circle_description = 2;

  // A counting circle explicitely used for testing the eVoting functionality
  // which VOTING Ausmittlung needs to ignore during the import process.
  // If the ignored counting circle is not a "test counting circle", something went wrong.
  bool is_test_counting_circle = 3;
}
