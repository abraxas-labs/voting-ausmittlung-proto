// (c) Copyright by Abraxas Informatik AG
// For license information see LICENSE file

syntax = "proto3";

package abraxas.voting.ausmittlung.services.v1.models;

import "models/political_business.proto";
import "shared/majority_election_write_in.proto";

message MajorityElectionContestWriteInMappings {
  /*
    validations: is-guid
    description: Eindeutige, technische Identifikation des Imports.
  */
  string import_id = 1;
  repeated MajorityElectionWriteInMappings election_write_in_mappings = 2;
}

message MajorityElectionWriteInMappings {
  SimplePoliticalBusiness election = 1;
  bool invalid_votes = 2;
  bool individual_votes = 3;
  repeated MajorityElectionWriteInMapping write_in_mappings = 4;
}

message MajorityElectionWriteInMapping {
  string id = 1;
  string write_in_candidate_name = 2;

  /*
    description: Anzahl g√ºltiger Stimmen.
  */
  int32 vote_count = 3;
  shared.v1.MajorityElectionWriteInMappingTarget target = 4;

  /*
    ech-name: candidateIdentification
    ech-length: 50
    ech-type: xs:token
    validations: is-guid
    description: Eindeutige, technische Identifikation des Kandidaten.
  */
  string candidate_id = 5;
}

message MajorityElectionWriteInMappingsChange {
  string result_id = 1;
  bool is_reset = 2;

  /* Count of duplicates candidates on the same ballot, which were then mapped to empty/invalid positions */
  int32 duplicated_candidates = 3;

  /* Count of ballots that were mapped to invalid, since the ballot was empty after write ins mapping */
  int32 invalid_due_to_empty_ballot = 4;
}
